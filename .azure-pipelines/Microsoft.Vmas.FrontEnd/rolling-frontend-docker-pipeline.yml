# Copyright (c) Microsoft. All rights reserved.

name: Rolling_FrontEnd_$(Date:yyMMdd)$(Rev:.r)

pr: none

trigger: none

pool:
  vmImage: 'ubuntu-latest'

# schedules:
# - cron: "0 */5 * * *"
#   displayName: "On code change - Run Every 5 hours Rolling build"
#   branches:
#     include:
#       - main

stages:
  - stage: NonProd_CheckCodeQuality
    dependsOn: []
    jobs:
      - template: ../templates/codequality-stage.yml
        parameters: 
          solution: 'Microsoft.MyWorkspace.GatewayAggregator'
          projectFolder: ['Microsoft.MyWorkspace.GatewayAggregator']
          buildPlatform: 'Any CPU'
          buildConfiguration: 'Release'
      - template: ../templates/react-tests-stage.yml
        parameters:
          reactEnvironment: 'development'
  - stage: Build_DeployImage
    dependsOn: [NonProd_CheckCodeQuality]
    jobs:
      - template: ../templates/docker-build-stage-common.yml
        parameters: 
                    solution: 'Microsoft.MyWorkspace.GatewayAggregator'
                    project: 'Microsoft.MyWorkspace.GatewayAggregator'
                    devContainerRegistry: 'spn-crm-mw-dev'
                    prodContainerRegistry: 'spn-crm-mw-prod'
                    k8Path: './.k8s/common/frontend_k8s.yml'
                    repo: 'frontend'
                    isFrontend: true
                    
  - stage: NonProd_TagBranch
    dependsOn: [NonProd_CheckCodeQuality,Build_DeployImage]
    jobs:
      - template: ../templates/tag-branch.yml
        parameters: 
                    tag_build: '$(Rev:.r)'
                    tag_msg: 'Vmas.FrontEnd.Api $(Date:yyMMdd)$(Rev:.r)'
  - stage: NonProd_EastUS2_DeployFrontEnd
    dependsOn: [NonProd_TagBranch,NonProd_CheckCodeQuality,Build_DeployImage]
    jobs:
      - template: ../templates/deploy-release-frontend.yml
        parameters:
            env: 'dev' 
            deploylocation: 'EUS'
            devOpsEnv: 'MW-Dev'
            serviceconnection: 'MyWorkspace Dev/Test (1d466822-2f06-46bc-9049-77506ad18492)' 
            service: 'FrontEnd'
            label: 'FrontEndApi'
            appConfigEndpoint: 'https://appcs-mw-dev-eus-002.azconfig.io'
            configFile: '$(Build.ArtifactStagingDirectory)/../drop/Configs/config-dev.json'
            kvrefFile: '$(Build.ArtifactStagingDirectory)/../drop/Configs/config-kvref-dev-eastus.json'
            k8ServiceConnection: 'spn-aks-mw-dev-eus'
            k8File: '$(Build.ArtifactStagingDirectory)/../drop/common/frontend_k8s.yml'
            k8namespace: 'dev'
            registryUri: 'crmwdevscus.azurecr.io'
            environment: 'development'
            podBinding: 'pod-id-aks-mw-dev-eus-001'
            aspNetCoreEnv: 'Development'
            minReplica: '8'
            maxReplica: '32'
            k8ingress: '$(Build.ArtifactStagingDirectory)/../drop/common/frontend_ingress_k8s.yml'
