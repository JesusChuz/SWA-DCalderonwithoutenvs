# Copyright (c) Microsoft. All rights reserved.

name: Rolling_Diagnostics_$(Date:yyMMdd)$(Rev:.r)

pr: none

trigger: none

pool:
  vmImage: 'ubuntu-latest'

schedules:
- cron: "0 */5 * * *"
  displayName: "On code change - Run Every 5 hours Rolling build"
  branches:
    include:
      - main

stages:
  - stage: NonProd_CheckCodeQuality
    dependsOn: []
    jobs:
      - template: ../templates/codequality-stage.yml
        parameters: 
            solution: 'Microsoft.MyWorkspace.Diagnostics'
            projectFolder: ['Microsoft.MyWorkspace.Diagnostics.Worker']
            buildPlatform: 'Any CPU'
            buildConfiguration: 'Release'
  - stage: Build_DeployImage
    dependsOn: [NonProd_CheckCodeQuality]
    jobs:
      - template: ../templates/docker-build-stage-common.yml
        parameters:
            solution: 'Microsoft.MyWorkspace.Diagnostics'
            project: 'Microsoft.MyWorkspace.Diagnostics.Worker'
            devContainerRegistry: 'spn-crm-mw-dev'
            prodContainerRegistry: 'spn-crm-mw-prod'
            k8Path: './.k8s/common/diagnostics_worker_k8s.yml'
            repo: 'diagnosticsworker'
  - stage: NonProd_TagBranch
    dependsOn: [NonProd_CheckCodeQuality,Build_DeployImage]
    jobs:
      - template: ../templates/tag-branch.yml
        parameters: 
                    tag_build: '$(Rev:.r)'
                    tag_msg: 'MyWorkspace.DiagnosticsService $(Date:yyMMdd)$(Rev:.r)'
  - stage: NonProd_EastUS2_DeployDiagonosticWorker
    dependsOn: [NonProd_TagBranch,NonProd_CheckCodeQuality,Build_DeployImage]
    jobs:
      - template: ../templates/deploy-release.yml
        parameters:
            env: 'dev' 
            deploylocation: 'EUS'
            devOpsEnv: 'MW-Dev'
            serviceconnection: 'MyWorkspace Dev/Test (1d466822-2f06-46bc-9049-77506ad18492)' 
            service: 'DiagnosticsWorker'
            label: 'DiagnosticsService'
            appConfigEndpoint: 'https://appcs-mw-dev-eus-002.azconfig.io'
            configFile: '$(Build.ArtifactStagingDirectory)/../drop/Configs/config-dev.json'
            kvrefFile: '$(Build.ArtifactStagingDirectory)/../drop/Configs/config-kvref-dev-eastus.json'
            k8ServiceConnection: 'spn-aks-mw-dev-eus'
            k8File: '$(Build.ArtifactStagingDirectory)/../drop/common/diagnostics_worker_k8s.yml'
            k8namespace: 'dev'
            registryUri: 'crmwdevscus.azurecr.io'
            environment: 'development'
            podBinding: 'pod-id-aks-mw-dev-eus-001'
            aspNetCoreEnv: 'Development'
            minReplica: '2'
            maxReplica: '2'
  - stage: Prod_EastUS2_DeployDiagonosticWorker
    dependsOn: [NonProd_EastUS2_DeployDiagonosticWorker]
    jobs:
      - template: ../templates/deploy-release.yml
        parameters:
            env: 'prod' 
            deploylocation: 'EUS'
            devOpsEnv: 'MW-Prod'
            serviceconnection: 'MyWorkspace Prod' 
            service: 'DiagnosticsWorker'
            label: 'DiagnosticsService'
            appConfigEndpoint: 'https://appcs-mw-prod-eus-001.azconfig.io'
            configFile: '$(Build.ArtifactStagingDirectory)/../drop/Configs/config-prod.json'
            kvrefFile: '$(Build.ArtifactStagingDirectory)/../drop/Configs/config-kvref-prod-eastus2.json'
            k8ServiceConnection: 'spn-aks-mw-prod-eus-001'
            k8File: '$(Build.ArtifactStagingDirectory)/../drop/common/diagnostics_worker_k8s.yml'
            k8namespace: 'prod'
            registryUri: 'crmwprodshared.azurecr.io'
            environment: 'production'
            podBinding: 'pod-id-aks-mw-prod-eus-001'
            aspNetCoreEnv: 'Production'
            minReplica: '2'
            maxReplica: '2'
